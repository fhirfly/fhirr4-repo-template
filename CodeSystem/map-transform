{"resourceType":"CodeSystem","id":"map-transform","meta":{"lastUpdated":"2022-08-11T14:14:40.718+11:00","profile":["http://hl7.org/fhir/StructureDefinition/shareablecodesystem"]},"text":{"status":"generated","div":"<div xmlns=\"http://www.w3.org/1999/xhtml\">\r\n      \r\n      <p>This code system http://hl7.org/fhir/map-transform defines the following codes:</p>\r\n      \r\n      <table class=\"codes\">\r\n        \r\n        <tr>\r\n          \r\n          <td style=\"white-space:nowrap\">\r\n            \r\n            <b>Code</b>\r\n          \r\n          </td>\r\n          \r\n          <td>\r\n            \r\n            <b>Display</b>\r\n          \r\n          </td>\r\n          \r\n          <td>\r\n            \r\n            <b>Definition</b>\r\n          \r\n          </td>\r\n        \r\n        </tr>\r\n        \r\n        <tr>\r\n          \r\n          <td style=\"white-space:nowrap\">create\r\n            \r\n            <a name=\"map-transform-create\"> </a>\r\n          \r\n          </td>\r\n          \r\n          <td>create</td>\r\n          \r\n          <td>create(type : string) - type is passed through to the application on the standard API, and must be known by it.</td>\r\n        \r\n        </tr>\r\n        \r\n        <tr>\r\n          \r\n          <td style=\"white-space:nowrap\">copy\r\n            \r\n            <a name=\"map-transform-copy\"> </a>\r\n          \r\n          </td>\r\n          \r\n          <td>copy</td>\r\n          \r\n          <td>copy(source).</td>\r\n        \r\n        </tr>\r\n        \r\n        <tr>\r\n          \r\n          <td style=\"white-space:nowrap\">truncate\r\n            \r\n            <a name=\"map-transform-truncate\"> </a>\r\n          \r\n          </td>\r\n          \r\n          <td>truncate</td>\r\n          \r\n          <td>truncate(source, length) - source must be stringy type.</td>\r\n        \r\n        </tr>\r\n        \r\n        <tr>\r\n          \r\n          <td style=\"white-space:nowrap\">escape\r\n            \r\n            <a name=\"map-transform-escape\"> </a>\r\n          \r\n          </td>\r\n          \r\n          <td>escape</td>\r\n          \r\n          <td>escape(source, fmt1, fmt2) - change source from one kind of escaping to another (plain, java, xml, json). note that this is for when the string itself is escaped.</td>\r\n        \r\n        </tr>\r\n        \r\n        <tr>\r\n          \r\n          <td style=\"white-space:nowrap\">cast\r\n            \r\n            <a name=\"map-transform-cast\"> </a>\r\n          \r\n          </td>\r\n          \r\n          <td>cast</td>\r\n          \r\n          <td>cast(source, type?) - case source from one type to another. target type can be left as implicit if there is one and only one target type known.</td>\r\n        \r\n        </tr>\r\n        \r\n        <tr>\r\n          \r\n          <td style=\"white-space:nowrap\">append\r\n            \r\n            <a name=\"map-transform-append\"> </a>\r\n          \r\n          </td>\r\n          \r\n          <td>append</td>\r\n          \r\n          <td>append(source...) - source is element or string.</td>\r\n        \r\n        </tr>\r\n        \r\n        <tr>\r\n          \r\n          <td style=\"white-space:nowrap\">translate\r\n            \r\n            <a name=\"map-transform-translate\"> </a>\r\n          \r\n          </td>\r\n          \r\n          <td>translate</td>\r\n          \r\n          <td>translate(source, uri_of_map) - use the translate operation.</td>\r\n        \r\n        </tr>\r\n        \r\n        <tr>\r\n          \r\n          <td style=\"white-space:nowrap\">reference\r\n            \r\n            <a name=\"map-transform-reference\"> </a>\r\n          \r\n          </td>\r\n          \r\n          <td>reference</td>\r\n          \r\n          <td>reference(source : object) - return a string that references the provided tree properly.</td>\r\n        \r\n        </tr>\r\n        \r\n        <tr>\r\n          \r\n          <td style=\"white-space:nowrap\">dateOp\r\n            \r\n            <a name=\"map-transform-dateOp\"> </a>\r\n          \r\n          </td>\r\n          \r\n          <td>dateOp</td>\r\n          \r\n          <td>Perform a date operation. *Parameters to be documented*.</td>\r\n        \r\n        </tr>\r\n        \r\n        <tr>\r\n          \r\n          <td style=\"white-space:nowrap\">uuid\r\n            \r\n            <a name=\"map-transform-uuid\"> </a>\r\n          \r\n          </td>\r\n          \r\n          <td>uuid</td>\r\n          \r\n          <td>Generate a random UUID (in lowercase). No Parameters.</td>\r\n        \r\n        </tr>\r\n        \r\n        <tr>\r\n          \r\n          <td style=\"white-space:nowrap\">pointer\r\n            \r\n            <a name=\"map-transform-pointer\"> </a>\r\n          \r\n          </td>\r\n          \r\n          <td>pointer</td>\r\n          \r\n          <td>Return the appropriate string to put in a reference that refers to the resource provided as a parameter.</td>\r\n        \r\n        </tr>\r\n        \r\n        <tr>\r\n          \r\n          <td style=\"white-space:nowrap\">evaluate\r\n            \r\n            <a name=\"map-transform-evaluate\"> </a>\r\n          \r\n          </td>\r\n          \r\n          <td>evaluate</td>\r\n          \r\n          <td>Execute the supplied FHIRPath expression and use the value returned by that.</td>\r\n        \r\n        </tr>\r\n        \r\n        <tr>\r\n          \r\n          <td style=\"white-space:nowrap\">cc\r\n            \r\n            <a name=\"map-transform-cc\"> </a>\r\n          \r\n          </td>\r\n          \r\n          <td>cc</td>\r\n          \r\n          <td>Create a CodeableConcept. Parameters = (text) or (system. Code[, display]).</td>\r\n        \r\n        </tr>\r\n        \r\n        <tr>\r\n          \r\n          <td style=\"white-space:nowrap\">c\r\n            \r\n            <a name=\"map-transform-c\"> </a>\r\n          \r\n          </td>\r\n          \r\n          <td>c</td>\r\n          \r\n          <td>Create a Coding. Parameters = (system. Code[, display]).</td>\r\n        \r\n        </tr>\r\n        \r\n        <tr>\r\n          \r\n          <td style=\"white-space:nowrap\">qty\r\n            \r\n            <a name=\"map-transform-qty\"> </a>\r\n          \r\n          </td>\r\n          \r\n          <td>qty</td>\r\n          \r\n          <td>Create a quantity. Parameters = (text) or (value, unit, [system, code]) where text is the natural representation e.g. [comparator]value[space]unit.</td>\r\n        \r\n        </tr>\r\n        \r\n        <tr>\r\n          \r\n          <td style=\"white-space:nowrap\">id\r\n            \r\n            <a name=\"map-transform-id\"> </a>\r\n          \r\n          </td>\r\n          \r\n          <td>id</td>\r\n          \r\n          <td>Create an identifier. Parameters = (system, value[, type]) where type is a code from the identifier type value set.</td>\r\n        \r\n        </tr>\r\n        \r\n        <tr>\r\n          \r\n          <td style=\"white-space:nowrap\">cp\r\n            \r\n            <a name=\"map-transform-cp\"> </a>\r\n          \r\n          </td>\r\n          \r\n          <td>cp</td>\r\n          \r\n          <td>Create a contact details. Parameters = (value) or (system, value). If no system is provided, the system should be inferred from the content of the value.</td>\r\n        \r\n        </tr>\r\n      \r\n      </table>\r\n    \r\n    </div>"},"extension":[{"url":"http://hl7.org/fhir/StructureDefinition/structuredefinition-wg","valueCode":"fhir"},{"url":"http://hl7.org/fhir/StructureDefinition/structuredefinition-standards-status","valueCode":"trial-use"},{"url":"http://hl7.org/fhir/StructureDefinition/structuredefinition-fmm","valueInteger":2}],"url":"http://hl7.org/fhir/map-transform","identifier":[{"system":"urn:ietf:rfc:3986","value":"urn:oid:2.16.840.1.113883.4.642.1.682"}],"version":"4.6.0","name":"StructureMapTransform","title":"StructureMapTransform","status":"draft","experimental":false,"date":"2021-01-05T10:01:24+11:00","publisher":"HL7 (FHIR Project)","contact":[{"telecom":[{"system":"url","value":"http://hl7.org/fhir"},{"system":"email","value":"fhir@lists.hl7.org"}]}],"description":"How data is copied/created.","caseSensitive":true,"valueSet":"http://hl7.org/fhir/ValueSet/map-transform","content":"complete","concept":[{"code":"create","display":"create","definition":"create(type : string) - type is passed through to the application on the standard API, and must be known by it."},{"code":"copy","display":"copy","definition":"copy(source)."},{"code":"truncate","display":"truncate","definition":"truncate(source, length) - source must be stringy type."},{"code":"escape","display":"escape","definition":"escape(source, fmt1, fmt2) - change source from one kind of escaping to another (plain, java, xml, json). note that this is for when the string itself is escaped."},{"code":"cast","display":"cast","definition":"cast(source, type?) - case source from one type to another. target type can be left as implicit if there is one and only one target type known."},{"code":"append","display":"append","definition":"append(source...) - source is element or string."},{"code":"translate","display":"translate","definition":"translate(source, uri_of_map) - use the translate operation."},{"code":"reference","display":"reference","definition":"reference(source : object) - return a string that references the provided tree properly."},{"code":"dateOp","display":"dateOp","definition":"Perform a date operation. *Parameters to be documented*."},{"code":"uuid","display":"uuid","definition":"Generate a random UUID (in lowercase). No Parameters."},{"code":"pointer","display":"pointer","definition":"Return the appropriate string to put in a reference that refers to the resource provided as a parameter."},{"code":"evaluate","display":"evaluate","definition":"Execute the supplied FHIRPath expression and use the value returned by that."},{"code":"cc","display":"cc","definition":"Create a CodeableConcept. Parameters = (text) or (system. Code[, display])."},{"code":"c","display":"c","definition":"Create a Coding. Parameters = (system. Code[, display])."},{"code":"qty","display":"qty","definition":"Create a quantity. Parameters = (text) or (value, unit, [system, code]) where text is the natural representation e.g. [comparator]value[space]unit."},{"code":"id","display":"id","definition":"Create an identifier. Parameters = (system, value[, type]) where type is a code from the identifier type value set."},{"code":"cp","display":"cp","definition":"Create a contact details. Parameters = (value) or (system, value). If no system is provided, the system should be inferred from the content of the value."}]}